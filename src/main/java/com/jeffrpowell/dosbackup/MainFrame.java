package com.jeffrpowell.dosbackup;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.ForkJoinPool;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

public class MainFrame extends javax.swing.JFrame{

	private final JFileChooser fileChooser;
	private final Set<Path> backupSources;
	private final ForkJoinPool forkJoinPool;
	private Path backupDestination;
	/**
	 * Creates new form MainFrame
	 */
	public MainFrame(){
		this.fileChooser = new JFileChooser(Paths.get("/").toFile());
		fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		this.backupSources = new HashSet<>();
		this.forkJoinPool = new ForkJoinPool();
		initComponents();
	}

	private void updateSourceList(){
		DefaultListModel<String> listModel = new DefaultListModel();
		for (Path backupSource : backupSources){
			listModel.addElement(backupSource.toString());
		}
		this.listSources.setModel(listModel);
	}
	
	private void mergePaths(Path newPath){
		Set<Path> pathsToKeep = new HashSet<>();
		boolean needToInsert = true;
		for (Path backupSource : backupSources){
			if (backupSource.startsWith(newPath)){
				pathsToKeep.add(newPath);
				needToInsert = false;
			}
			else if (newPath.startsWith(backupSource)){
				return;
			}
			else{
				pathsToKeep.add(backupSource);
			}
		}
		if (needToInsert){
			pathsToKeep.add(newPath);
		}
		backupSources.clear();
		backupSources.addAll(pathsToKeep);
	}
	
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
	 * method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnBackupSources = new javax.swing.JButton();
        btnRemoveSource = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSources = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        btnBackupDestination = new javax.swing.JButton();
        lblBackupDestination = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnInitialBackup = new javax.swing.JButton();
        btnDeltaBackup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        btnBackupSources.setText("Add Backup Source");
        btnBackupSources.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupSourcesActionPerformed(evt);
            }
        });

        btnRemoveSource.setText("Remove Selected Source");
        btnRemoveSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnBackupSources)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnRemoveSource)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(btnBackupSources)
                    .addContainerGap(100, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(btnRemoveSource)
                    .addContainerGap(100, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel4);

        listSources.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listSources);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1);

        btnBackupDestination.setText("Set Backup Destination");
        btnBackupDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupDestinationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnBackupDestination)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblBackupDestination)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 115, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnBackupDestination)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblBackupDestination)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel2);

        btnInitialBackup.setText("Perform Initial Backup");
        btnInitialBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitialBackupActionPerformed(evt);
            }
        });

        btnDeltaBackup.setText("Backup Just New Changes");
        btnDeltaBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeltaBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnInitialBackup)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnDeltaBackup)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnInitialBackup)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnDeltaBackup)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackupSourcesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupSourcesActionPerformed
        int result = fileChooser.showDialog(this, "Select");
		if (result == JFileChooser.APPROVE_OPTION){
			mergePaths(fileChooser.getSelectedFile().toPath());
			updateSourceList();
		}
    }//GEN-LAST:event_btnBackupSourcesActionPerformed

    private void btnBackupDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupDestinationActionPerformed
        int result = fileChooser.showDialog(this, "Select");
		if (result == JFileChooser.APPROVE_OPTION){
			backupDestination = fileChooser.getSelectedFile().toPath();
			lblBackupDestination.setText(backupDestination.toString());
		}
    }//GEN-LAST:event_btnBackupDestinationActionPerformed

    private void btnInitialBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitialBackupActionPerformed
		if (backupDestination != null){
			for (Path backupSource : backupSources){
				forkJoinPool.invoke(new BackupForkThread(backupSource, backupDestination, true));
			}
		}
    }//GEN-LAST:event_btnInitialBackupActionPerformed

    private void btnDeltaBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeltaBackupActionPerformed
        if (backupDestination != null){
			for (Path backupSource : backupSources){
				forkJoinPool.invoke(new BackupForkThread(backupSource, backupDestination, false));
			}
		}
    }//GEN-LAST:event_btnDeltaBackupActionPerformed

    private void btnRemoveSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSourceActionPerformed
        String source = listSources.getSelectedValue();
		if (source != null){
			backupSources.remove(Paths.get(source));
			updateSourceList();
		}
    }//GEN-LAST:event_btnRemoveSourceActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]){
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()){
				if ("Nimbus".equals(info.getName())){
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable(){
			public void run(){
				new MainFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackupDestination;
    private javax.swing.JButton btnBackupSources;
    private javax.swing.JButton btnDeltaBackup;
    private javax.swing.JButton btnInitialBackup;
    private javax.swing.JButton btnRemoveSource;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblBackupDestination;
    public javax.swing.JList<String> listSources;
    // End of variables declaration//GEN-END:variables
}
