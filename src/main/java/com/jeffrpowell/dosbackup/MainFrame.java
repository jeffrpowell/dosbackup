package com.jeffrpowell.dosbackup;

import java.awt.event.ActionEvent;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.Timer;

public class MainFrame extends javax.swing.JFrame implements BackupObserver{

	private final JFileChooser fileChooser;
	private final Set<Path> backupSources;
	private final Executor executor;
	private Path backupDestination;
	private WorkerThread currentThread;
	private final Timer timer;
	private LocalTime time;
	/**
	 * Creates new form MainFrame
	 */
	public MainFrame(){
		this.fileChooser = new JFileChooser(Paths.get("/").toFile());
		fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		this.backupSources = new HashSet<>();
		this.executor = Executors.newSingleThreadExecutor();
		this.currentThread = null;
		initComponents();
		this.time = LocalTime.MIDNIGHT;
		this.timer = new Timer(1000, (ActionEvent e) -> {
			time = time.plusSeconds(1);
			lblElapsedTime.setText(time.format(DateTimeFormatter.ISO_LOCAL_TIME));
		});
	}

	private void updateSourceList(){
		DefaultListModel<String> listModel = new DefaultListModel();
		for (Path backupSource : backupSources){
			listModel.addElement(backupSource.toString());
		}
		this.listSources.setModel(listModel);
	}
	
	private void mergePaths(Path newPath){
		Set<Path> pathsToKeep = new HashSet<>();
		boolean needToInsert = true;
		for (Path backupSource : backupSources){
			if (backupSource.startsWith(newPath)){
				pathsToKeep.add(newPath);
				needToInsert = false;
			}
			else if (newPath.startsWith(backupSource)){
				return;
			}
			else{
				pathsToKeep.add(backupSource);
			}
		}
		if (needToInsert){
			pathsToKeep.add(newPath);
		}
		backupSources.clear();
		backupSources.addAll(pathsToKeep);
	}
	
	private void setButtonsEnabled(boolean enabled)
	{
		btnBackupDestination.setEnabled(enabled);
		btnBackupSources.setEnabled(enabled);
		btnDeltaBackup.setEnabled(enabled);
		btnInitialBackup.setEnabled(enabled);
		btnRemoveSource.setEnabled(enabled);
		btnCancel.setEnabled(!enabled);
	}
	
	@Override
	public void updateProgress(int moved, int found, int directoriesLeft){
		lblFilesBackedUp.setText(Integer.toString(moved));
		lblFilesFound.setText(Integer.toString(found));
		lblDirectoriesLeft.setText(Integer.toString(directoriesLeft));
	}

	@Override
	public void done(){
		setButtonsEnabled(true);
		currentThread = null;
		timer.stop();
	}
	
	private void restartTimer()
	{
		time = LocalTime.MIDNIGHT;
		lblElapsedTime.setText(time.format(DateTimeFormatter.ISO_LOCAL_TIME));
		timer.restart();
	}

	
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
	 * method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnBackupSources = new javax.swing.JButton();
        btnRemoveSource = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));
        jScrollPane1 = new javax.swing.JScrollPane();
        listSources = new javax.swing.JList<>();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));
        jPanel2 = new javax.swing.JPanel();
        btnBackupDestination = new javax.swing.JButton();
        lblBackupDestination = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));
        jPanel3 = new javax.swing.JPanel();
        btnInitialBackup = new javax.swing.JButton();
        btnDeltaBackup = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblFilesBackedUp = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblFilesFound = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblDirectoriesLeft = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblElapsedTime = new javax.swing.JLabel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));
        jPanel7 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.X_AXIS));

        btnBackupSources.setText("Add Backup Source");
        btnBackupSources.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupSourcesActionPerformed(evt);
            }
        });
        jPanel4.add(btnBackupSources);

        btnRemoveSource.setText("Remove Selected Source");
        btnRemoveSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSourceActionPerformed(evt);
            }
        });
        jPanel4.add(btnRemoveSource);

        jPanel1.add(jPanel4);
        jPanel1.add(filler1);

        listSources.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listSources);

        jPanel1.add(jScrollPane1);
        jPanel1.add(filler2);

        getContentPane().add(jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        btnBackupDestination.setText("Set Backup Destination");
        btnBackupDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupDestinationActionPerformed(evt);
            }
        });
        jPanel2.add(btnBackupDestination);
        jPanel2.add(lblBackupDestination);

        getContentPane().add(jPanel2);
        getContentPane().add(filler3);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        btnInitialBackup.setText("Perform Initial Backup");
        btnInitialBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitialBackupActionPerformed(evt);
            }
        });
        jPanel3.add(btnInitialBackup);

        btnDeltaBackup.setText("Backup Just New Changes");
        btnDeltaBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeltaBackupActionPerformed(evt);
            }
        });
        jPanel3.add(btnDeltaBackup);

        getContentPane().add(jPanel3);
        getContentPane().add(filler4);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.X_AXIS));

        jLabel1.setText("Files Moved: ");
        jPanel5.add(jLabel1);

        lblFilesBackedUp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel5.add(lblFilesBackedUp);

        getContentPane().add(jPanel5);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.X_AXIS));

        jLabel2.setText("Files Found: ");
        jPanel6.add(jLabel2);

        lblFilesFound.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel6.add(lblFilesFound);

        getContentPane().add(jPanel6);

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.X_AXIS));

        jLabel3.setText("Folders Left:");
        jPanel8.add(jLabel3);

        lblDirectoriesLeft.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel8.add(lblDirectoriesLeft);

        getContentPane().add(jPanel8);

        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.X_AXIS));

        jLabel4.setText("Elapsed Time: ");
        jPanel9.add(jLabel4);

        lblElapsedTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel9.add(lblElapsedTime);

        getContentPane().add(jPanel9);
        getContentPane().add(filler5);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.X_AXIS));

        btnCancel.setText("Stop Everything!");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel7.add(btnCancel);

        getContentPane().add(jPanel7);
        getContentPane().add(filler6);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackupSourcesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupSourcesActionPerformed
        int result = fileChooser.showDialog(this, "Select");
		if (result == JFileChooser.APPROVE_OPTION){
			mergePaths(fileChooser.getSelectedFile().toPath());
			updateSourceList();
		}
    }//GEN-LAST:event_btnBackupSourcesActionPerformed

    private void btnBackupDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupDestinationActionPerformed
        int result = fileChooser.showDialog(this, "Select");
		if (result == JFileChooser.APPROVE_OPTION){
			backupDestination = fileChooser.getSelectedFile().toPath();
			lblBackupDestination.setText(backupDestination.toString());
		}
    }//GEN-LAST:event_btnBackupDestinationActionPerformed

    private void btnInitialBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitialBackupActionPerformed
		if (backupDestination != null){
			currentThread = new WorkerThread(backupSources, backupDestination, true, this);
			setButtonsEnabled(false);
			executor.execute(currentThread);
			restartTimer();
		}
    }//GEN-LAST:event_btnInitialBackupActionPerformed

    private void btnDeltaBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeltaBackupActionPerformed
        if (backupDestination != null){
			currentThread = new WorkerThread(backupSources, backupDestination, false, this);
			setButtonsEnabled(false);
			executor.execute(currentThread);
			restartTimer();
		}
    }//GEN-LAST:event_btnDeltaBackupActionPerformed

    private void btnRemoveSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSourceActionPerformed
        String source = listSources.getSelectedValue();
		if (source != null){
			backupSources.remove(Paths.get(source));
			updateSourceList();
		}
    }//GEN-LAST:event_btnRemoveSourceActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (currentThread != null)
		{
			currentThread.cancel(true);
			timer.stop();
		}
    }//GEN-LAST:event_btnCancelActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]){
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()){
				if ("Nimbus".equals(info.getName())){
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex){
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable(){
			public void run(){
				new MainFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackupDestination;
    private javax.swing.JButton btnBackupSources;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeltaBackup;
    private javax.swing.JButton btnInitialBackup;
    private javax.swing.JButton btnRemoveSource;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblBackupDestination;
    private javax.swing.JLabel lblDirectoriesLeft;
    private javax.swing.JLabel lblElapsedTime;
    private javax.swing.JLabel lblFilesBackedUp;
    private javax.swing.JLabel lblFilesFound;
    public javax.swing.JList<String> listSources;
    // End of variables declaration//GEN-END:variables

}
